package di

import (
	userCommunicationServiceHandler "hs-backend/internal/handler/user_communication_service"
	"hs-backend/internal/repository"

	"gorm.io/gorm"
)

func InitializeGetUserCommunicationServiceHandler(db *gorm.DB) *userCommunicationServiceHandler.GetUserCommunicationServiceHandler {
	userCommunicationServiceRepository := repository.NewUserCommunicationServiceRepository(db)
	getUserCommunicationServiceHandler := userCommunicationServiceHandler.NewGetUserCommunicationServiceHandler(userCommunicationServiceRepository)
	return getUserCommunicationServiceHandler
}

func InitializeCreateUserCommunicationServiceHandler(db *gorm.DB) *userCommunicationServiceHandler.CreateUserCommunicationServiceHandler {
	userCommunicationServiceRepository := repository.NewUserCommunicationServiceRepository(db)
	createUserCommunicationServiceHandler := userCommunicationServiceHandler.NewCreateUserCommunicationServiceHandler(userCommunicationServiceRepository)
	return createUserCommunicationServiceHandler
}

func InitializeUpdateUserCommunicationServiceHandler(db *gorm.DB) *userCommunicationServiceHandler.UpdateUserCommunicationServiceHandler {
	userCommunicationServiceRepository := repository.NewUserCommunicationServiceRepository(db)
	updateUserCommunicationServiceHandler := userCommunicationServiceHandler.NewUpdateUserCommunicationServiceHandler(userCommunicationServiceRepository)
	return updateUserCommunicationServiceHandler
}

func InitializeDeleteUserCommunicationServiceHandler(db *gorm.DB) *userCommunicationServiceHandler.DeleteUserCommunicationServiceHandler {
	facetRepository := repository.NewFacetRepository(db)
	userCommunicationServiceRepository := repository.NewUserCommunicationServiceRepository(db)
	deleteUserCommunicationServiceHandler := userCommunicationServiceHandler.NewDeleteUserCommunicationServiceHandler(facetRepository, userCommunicationServiceRepository)
	return deleteUserCommunicationServiceHandler
}
