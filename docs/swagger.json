{
    "swagger": "2.0",
    "info": {
        "description": "This is the backend API for the HS project",
        "title": "HS Backend API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/facets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns facets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facets"
                ],
                "summary": "Get facets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetFacetsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new facet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facets"
                ],
                "summary": "Create facet",
                "parameters": [
                    {
                        "description": "Facet",
                        "name": "facet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateFacetInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateFacetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns user info by email query param",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetUserByEmailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateFacetInput": {
            "type": "object",
            "required": [
                "color",
                "configuration",
                "privateLabel",
                "publicLabel"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "configuration": {
                    "$ref": "#/definitions/model.FacetConfig"
                },
                "privateLabel": {
                    "type": "string"
                },
                "publicLabel": {
                    "type": "string"
                }
            }
        },
        "dto.CreateFacetResponse": {
            "type": "object",
            "properties": {
                "facet": {
                    "$ref": "#/definitions/dto.FacetResponse"
                }
            }
        },
        "dto.FacetResponse": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "configuration": {
                    "$ref": "#/definitions/model.FacetConfig"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "privateLabel": {
                    "type": "string"
                },
                "publicLabel": {
                    "type": "string"
                }
            }
        },
        "dto.GetFacetsResponse": {
            "type": "object",
            "properties": {
                "facets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.FacetResponse"
                    }
                }
            }
        },
        "dto.GetUserByEmailResponse": {
            "type": "object",
            "properties": {
                "avatarUrl": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                }
            }
        },
        "error.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "model.FacetConfig": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FacetConfigItem"
                    }
                }
            }
        },
        "model.FacetConfigItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/model.FacetStatus"
                }
            }
        },
        "model.FacetStatus": {
            "type": "string",
            "enum": [
                "available",
                "emergency-only"
            ],
            "x-enum-varnames": [
                "Available",
                "EmergencyOnly"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and your token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}