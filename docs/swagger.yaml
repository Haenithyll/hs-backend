definitions:
  domain.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  enum.CommunicationService:
    enum:
    - faceToFace
    - phone
    - message
    - email
    - discord
    - microsoftTeams
    type: string
    x-enum-varnames:
    - FaceToFace
    - Phone
    - Message
    - Email
    - Discord
    - MicrosoftTeams
  enum.FacetStatus:
    enum:
    - available
    - emergencyOnly
    type: string
    x-enum-varnames:
    - Available
    - EmergencyOnly
  json.FacetConfig:
    properties:
      items:
        items:
          $ref: '#/definitions/json.FacetConfigItem'
        type: array
    type: object
  json.FacetConfigItem:
    properties:
      id:
        type: integer
      status:
        $ref: '#/definitions/enum.FacetStatus'
    type: object
  json.PrismConfig:
    properties:
      base:
        type: integer
      users:
        items:
          $ref: '#/definitions/json.PrismConfigUserItem'
        type: array
    type: object
  json.PrismConfigUserItem:
    properties:
      facetId:
        type: integer
      userId:
        type: string
    type: object
  request.CreateFacetRequest:
    properties:
      color:
        type: string
      configuration:
        $ref: '#/definitions/json.FacetConfig'
      privateLabel:
        type: string
      publicLabel:
        type: string
    required:
    - color
    - configuration
    - privateLabel
    - publicLabel
    type: object
  request.CreatePrismRequest:
    properties:
      configuration:
        $ref: '#/definitions/json.PrismConfig'
      name:
        type: string
    required:
    - configuration
    - name
    type: object
  request.CreateUserCommunicationServiceRequest:
    properties:
      name:
        type: string
      service:
        $ref: '#/definitions/enum.CommunicationService'
      value:
        type: string
    required:
    - name
    - service
    - value
    type: object
  request.UpdateFacetRequest:
    properties:
      color:
        type: string
      configuration:
        $ref: '#/definitions/json.FacetConfig'
      privateLabel:
        type: string
      publicLabel:
        type: string
    type: object
  request.UpdatePrismRequest:
    properties:
      configuration:
        $ref: '#/definitions/json.PrismConfig'
      name:
        type: string
    type: object
  request.UpdateUserCommunicationServiceRequest:
    properties:
      name:
        type: string
      service:
        $ref: '#/definitions/enum.CommunicationService'
      value:
        type: string
    type: object
  response.FacetResponse:
    properties:
      color:
        type: string
      configuration:
        $ref: '#/definitions/response.FacetResponseEnrichedConfig'
      createdAt:
        type: string
      id:
        type: integer
      privateLabel:
        type: string
      publicLabel:
        type: string
    type: object
  response.FacetResponseEnrichedConfig:
    properties:
      items:
        items:
          $ref: '#/definitions/response.FacetResponseEnrichedConfigItem'
        type: array
    type: object
  response.FacetResponseEnrichedConfigItem:
    properties:
      communicationService:
        $ref: '#/definitions/response.FacetResponseEnrichedConfigItemCommunicationService'
      status:
        $ref: '#/definitions/enum.FacetStatus'
    type: object
  response.FacetResponseEnrichedConfigItemCommunicationService:
    properties:
      id:
        type: integer
      name:
        type: string
      service:
        $ref: '#/definitions/enum.CommunicationService'
      value:
        type: string
    type: object
  response.PrismResponse:
    properties:
      configuration:
        $ref: '#/definitions/response.PrismResponseEnrichedConfig'
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  response.PrismResponseEnrichedConfig:
    properties:
      base:
        $ref: '#/definitions/response.PrismResponseFacet'
      users:
        items:
          $ref: '#/definitions/response.PrismResponseEnrichedUserItem'
        type: array
    type: object
  response.PrismResponseEnrichedUserItem:
    properties:
      facet:
        $ref: '#/definitions/response.PrismResponseFacet'
      user:
        $ref: '#/definitions/response.PrismResponseUser'
    type: object
  response.PrismResponseFacet:
    properties:
      color:
        type: string
      id:
        type: integer
      privateLabel:
        type: string
      publicLabel:
        type: string
    type: object
  response.PrismResponseUser:
    properties:
      avatarUrl:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
    type: object
  response.UserCommunicationServiceResponse:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      service:
        $ref: '#/definitions/enum.CommunicationService'
      value:
        type: string
    type: object
  response.UserResponse:
    properties:
      avatarUrl:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
    type: object
info:
  contact: {}
  description: This is the backend API for the HS project
  title: HS Backend API
  version: "1.0"
paths:
  /api/facets:
    get:
      consumes:
      - application/json
      description: Returns facets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.FacetResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get facets
      tags:
      - Facets
    post:
      consumes:
      - application/json
      description: Creates a new facet
      parameters:
      - description: Facet
        in: body
        name: facet
        required: true
        schema:
          $ref: '#/definitions/request.CreateFacetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.FacetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create facet
      tags:
      - Facets
  /api/facets/{facetId}:
    delete:
      consumes:
      - application/json
      description: Deletes a facet
      parameters:
      - description: Facet ID
        in: path
        name: facetId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete facet
      tags:
      - Facets
    patch:
      consumes:
      - application/json
      description: Updates a facet
      parameters:
      - description: Facet ID
        in: path
        name: facetId
        required: true
        type: integer
      - description: Facet
        in: body
        name: facet
        required: true
        schema:
          $ref: '#/definitions/request.UpdateFacetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.FacetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update facet
      tags:
      - Facets
  /api/prisms:
    get:
      consumes:
      - application/json
      description: Returns prisms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.PrismResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get prisms
      tags:
      - Prisms
    post:
      consumes:
      - application/json
      description: Creates a new prism
      parameters:
      - description: Prism
        in: body
        name: prism
        required: true
        schema:
          $ref: '#/definitions/request.CreatePrismRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PrismResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create prism
      tags:
      - Prisms
  /api/prisms/{prismId}:
    delete:
      consumes:
      - application/json
      description: Deletes a prism
      parameters:
      - description: Prism ID
        in: path
        name: prismId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete prism
      tags:
      - Prisms
    patch:
      consumes:
      - application/json
      description: Updates a prism
      parameters:
      - description: Prism ID
        in: path
        name: prismId
        required: true
        type: integer
      - description: Prism
        in: body
        name: prism
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePrismRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PrismResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update prism
      tags:
      - Prisms
  /api/prisms/{prismId}/activate:
    post:
      consumes:
      - application/json
      description: Activates a prism
      parameters:
      - description: Prism ID
        in: path
        name: prismId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Activate prism
      tags:
      - Prisms
  /api/users/communication-services:
    get:
      consumes:
      - application/json
      description: Returns user communication services
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.UserCommunicationServiceResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user communication services
      tags:
      - User Communication Services
    post:
      consumes:
      - application/json
      description: Creates a new user communication service
      parameters:
      - description: User Communication Service
        in: body
        name: userCommunicationService
        required: true
        schema:
          $ref: '#/definitions/request.CreateUserCommunicationServiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserCommunicationServiceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create user communication service
      tags:
      - User Communication Services
  /api/users/communication-services/{userCommunicationServiceId}:
    delete:
      consumes:
      - application/json
      description: Deletes a user communication service
      parameters:
      - description: User Communication Service ID
        in: path
        name: userCommunicationServiceId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete user communication service
      tags:
      - User Communication Services
    patch:
      consumes:
      - application/json
      description: Updates a user communication service
      parameters:
      - description: User Communication Service ID
        in: path
        name: userCommunicationServiceId
        required: true
        type: integer
      - description: User Communication Service
        in: body
        name: userCommunicationService
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUserCommunicationServiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserCommunicationServiceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update user communication service
      tags:
      - User Communication Services
  /api/users/email/{email}:
    get:
      consumes:
      - application/json
      description: Returns user info by email query param
      parameters:
      - description: Email address
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user by email
      tags:
      - Users
  /api/users/me:
    get:
      consumes:
      - application/json
      description: Returns user me
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user me
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and your token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
